<%
/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

    var log = new Log();
    log.debug("Logout Request Function");
    include("/services/constants.jag");
    var app = require("/site/public/theme/settings.js").Settings.app;
    var utils = Packages.org.wso2.carbon.apimgt.impl.utils.APIUtil;
    var appUtils = require("/services/utils.js");

    var idTokenP1Cookie = request.getCookie("AM_ID_TOKEN_DEFAULT_P1");
    var idTokenP2Cookie = request.getCookie("AM_ID_TOKEN_DEFAULT_P2");
    var idToken;
    if(idTokenP1Cookie && idTokenP2Cookie) {
        idToken = idTokenP1Cookie.value + idTokenP2Cookie.value;
    }
    
    var serverUrl = "";
    var forwarded_for = request.getHeader(app.customUrl.forwardedHeader);
    if (app.customUrl.enabled && forwarded_for) {
        serverUrl = MGT_TRANSPORT + forwarded_for;
    } else {
        serverUrl = appUtils.getTenantBasedCustomUrl();
        if (serverUrl == null) {
            serverUrl = utils.getServerURL();
        }
    }
    var logoutEndpoint = serverUrl + OIDC_LOGOUT_ENDPOINT_SUFFIX;

    var idpConfig = utils.getIdentityProviderConfig();
    if (idpConfig != null) {
        logoutEndpoint = idpConfig.getOidcLogoutEndpoint();
    }
    var postLogoutRedirectURI = appUtils.getTenantBasedLogoutCallBack();
    if (postLogoutRedirectURI == null) {
         postLogoutRedirectURI = serverUrl + app.context + LOGOUT_CALLBACK_URL_SUFFIX;
    }
    var idTokenParam = idToken ? '?id_token_hint=' + idToken + '&' : '?';
    var url = logoutEndpoint + idTokenParam + 'post_logout_redirect_uri=' + postLogoutRedirectURI;
    
    log.debug("Redirecting to = " + url);

    response.sendRedirect(url);

%>
